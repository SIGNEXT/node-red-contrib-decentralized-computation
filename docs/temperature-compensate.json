[
  {
    "id": "d4457654.eb617",
    "type": "tab",
    "label": "Flow 1",
    "disabled": false,
    "info": ""
  },
  {
    "id": "9e505aa9.e49a88",
    "type": "temperature-humidity",
    "z": "d4457654.eb617",
    "name": "",
    "pin": "12",
    "predicates": "temperature humidity micropython",
    "priorities": "",
    "repeat": true,
    "interval": "5000",
    "broker": "42ccbf72.820778",
    "action": "local",
    "x": 290,
    "y": 200,
    "wires": [["a7e54fa2.29eb28"], ["dbac562.858f028"]]
  },
  {
    "id": "a7e54fa2.29eb28",
    "type": "if",
    "z": "d4457654.eb617",
    "name": "tmp >= 30",
    "property": "payload.temperature",
    "propertyType": "msg",
    "rules": [
      {
        "t": "gte",
        "v": "30",
        "vt": "num"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 1,
    "predicates": "",
    "priorities": "micropython",
    "broker": "42ccbf72.820778",
    "x": 620,
    "y": 200,
    "wires": [["2279f62a.322bba"]]
  },
  {
    "id": "2279f62a.322bba",
    "type": "and",
    "z": "d4457654.eb617",
    "name": "",
    "property": "payload",
    "propertyType": "msg",
    "count": "2",
    "predicates": "",
    "broker": "42ccbf72.820778",
    "priorities": "micropython",
    "x": 780,
    "y": 260,
    "wires": [["8ffb5bdf.1955d8"]]
  },
  {
    "id": "abd18820.decaa",
    "type": "if",
    "z": "d4457654.eb617",
    "name": "tmp >= 30",
    "property": "payload.temperature",
    "propertyType": "msg",
    "rules": [
      {
        "t": "gte",
        "v": "30",
        "vt": "num"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 1,
    "predicates": "",
    "priorities": "micropython",
    "broker": "42ccbf72.820778",
    "x": 620,
    "y": 320,
    "wires": [["2279f62a.322bba"]]
  },
  {
    "id": "9e92d678.e0ce58",
    "type": "temperature-humidity",
    "z": "d4457654.eb617",
    "name": "",
    "pin": "12",
    "predicates": "temperature humidity micropython",
    "priorities": "",
    "repeat": true,
    "interval": "5000",
    "broker": "42ccbf72.820778",
    "action": "local",
    "x": 290,
    "y": 320,
    "wires": [["abd18820.decaa"], ["d6a4deaf.5998c8"]]
  },
  {
    "id": "dbac562.858f028",
    "type": "function",
    "z": "d4457654.eb617",
    "name": "",
    "func": "if(msg.start){\n    if(!context.get('timerId')){\n        const timerId = setInterval(() => {\n            const temp_msg = {\n                payload: {\n                    temperature: 30,\n                    humidity: 30,\n                },\n                node_id: node.id, \n                device_id: 'node-red'\n            };\n            node.send(temp_msg); \n        }, 5000);\n        context.set('timerId', timerId)\n    }\n}else if(msg.start === false){\n    if(context.get('timerId')){\n        clearInterval(context.get('timerId'))\n        context.set('timerId', null)\n    }\n}",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\nif(context.get('timerId')){\n        clearInterval(context.get('timerId'))\n        context.set('timerId', null)\n    }",
    "x": 460,
    "y": 240,
    "wires": [["a7e54fa2.29eb28"]]
  },
  {
    "id": "8ffb5bdf.1955d8",
    "type": "proxy mqtt out",
    "z": "d4457654.eb617",
    "name": "",
    "topic": "AC/ON",
    "qos": "",
    "retain": "",
    "broker": "42ccbf72.820778",
    "predicates": "",
    "priorities": "micropython",
    "x": 970,
    "y": 260,
    "wires": []
  },
  {
    "id": "30fa5398.839464",
    "type": "registry",
    "z": "d4457654.eb617",
    "name": "",
    "topic": "announcements/+",
    "qos": "2",
    "retain": true,
    "datatype": "json",
    "broker": "42ccbf72.820778",
    "x": 440,
    "y": 80,
    "wires": [["f44ca256.26563"]]
  },
  {
    "id": "f44ca256.26563",
    "type": "orchestrator",
    "z": "d4457654.eb617",
    "name": "",
    "topic": "yes",
    "qos": "",
    "retain": "",
    "broker": "42ccbf72.820778",
    "x": 630,
    "y": 80,
    "wires": [[]]
  },
  {
    "id": "d6a4deaf.5998c8",
    "type": "function",
    "z": "d4457654.eb617",
    "name": "",
    "func": "if(msg.start){\n    if(!context.get('timerId')){\n        const timerId = setInterval(() => {\n            const temp_msg = {\n                payload: {\n                    temperature: 30,\n                    humidity: 30,\n                },\n                node_id: node.id, \n                device_id: 'node-red'\n            };\n            node.send(temp_msg); \n        }, 5000);\n        context.set('timerId', timerId)\n    }\n}else if(msg.start === false){\n    if(context.get('timerId')){\n        clearInterval(context.get('timerId'))\n        context.set('timerId', null)\n    }\n}",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\nif(context.get('timerId')){\n        clearInterval(context.get('timerId'))\n        context.set('timerId', null)\n    }",
    "x": 460,
    "y": 360,
    "wires": [["abd18820.decaa"]]
  },
  {
    "id": "42ccbf72.820778",
    "type": "mqtt-broker",
    "name": "",
    "broker": "mosquitto",
    "port": "1883",
    "clientid": "",
    "usetls": false,
    "compatmode": false,
    "keepalive": "60",
    "cleansession": true,
    "birthTopic": "",
    "birthQos": "0",
    "birthPayload": "",
    "closeTopic": "",
    "closeQos": "0",
    "closePayload": "",
    "willTopic": "alive/node-red",
    "willQos": "1",
    "willPayload": "0"
  }
]
